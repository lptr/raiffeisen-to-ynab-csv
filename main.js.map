{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".dropzone {\\n  align-items: center;\\n  background: lightgrey;\\n  border: dashed 1px grey;\\n  display: flex;\\n  justify-content: center;\\n  width: 300px;\\n  height: 100px;\\n}\\n\\n.hover {\\n  background: grey;\\n  border: dashed 1px darkgrey;\\n}\\n\\ntable {\\n  width: 100%;\\n  padding: 20px;\\n}\\n\\ntd.mat-column-amount {\\n  text-align: right;\\n}\\n\\ntd.mat-cell {\\n  padding-left: 0.5em;\\n  padding-right: 0.5em;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <h1>Raiffeisen YNAB Importer</h1>\\n</mat-toolbar>\\n\\n<div class=\\\"basic-container\\\">\\n  <div\\n    class=\\\"dropzone\\\"\\n    [ngxFileDropzone]=\\\"readMode\\\"\\n    accept='text/csv; charset=\\\"iso-8859-1\\\"'\\n    (fileDrop)=\\\"onFileLoad($event)\\\">\\n    Drop a CSV file in this zone.\\n  </div>\\n  <button mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!transactions\\\" (click)=\\\"download()\\\">Download YNAB CSV</button>\\n\\n  <table mat-table [dataSource]=\\\"transactions\\\" class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <th mat-header-cell *matHeaderCellDef> Típus </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.type}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"recordDate\\\">\\n      <th mat-header-cell *matHeaderCellDef> Könyvelés dátuma </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.recordDate | date : shortDate }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"valueDate\\\">\\n      <th mat-header-cell *matHeaderCellDef> Értéknap </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.valueDate | date : shortDate }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef> Azonosító </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.id}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef> Összeg </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.amount | number}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"payee\\\">\\n      <th mat-header-cell *matHeaderCellDef> Partner </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.payee}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"note1\\\">\\n      <th mat-header-cell *matHeaderCellDef> Közlemény/1 </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.note1}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"note2\\\">\\n      <th mat-header-cell *matHeaderCellDef> Közlemény/2 </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.note2}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"note3\\\">\\n      <th mat-header-cell *matHeaderCellDef> Közlemény/3 </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.note3}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component } from '@angular/core';\n\nimport { ReadFile, ReadMode } from 'ngx-file-helpers';\n\nimport * as Papa from 'papaparse';\n\nimport { saveAs } from 'file-saver'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'raiffeisen-ynab-importer';\n  readMode = ReadMode.arrayBuffer;\n  transactions: Transaction[];\n  displayedColumns = [\n    \"type\",\n    \"recordDate\",\n    \"valueDate\",\n    \"id\",\n    \"amount\",\n    \"payee\",\n    \"note1\",\n    \"note2\",\n    \"note3\",\n  ];\n\n  constructor() {}\n\n  onFileLoad(file) {\n    const text = new TextDecoder('windows-1250').decode(file.content);\n    Papa.parse(text, {\n      delimiter: \";\",\n      complete: (data) => {\n        console.log(\"Parsed data\", data);\n        let csvRows = data.data;\n        // Ignore \"Könyvelésre váró tételek\"\n        while (csvRows.length) {\n          const header = csvRows.shift();\n          if (header[0] === \"Könyvelt tételek\") {\n            // Ignore table header\n            csvRows.shift();\n            break;\n          }\n        }\n\n        let transactions: Transaction[] = [];\n        for (let csvRow of csvRows) {\n          if (csvRow[0] === \"\") {\n            break;\n          }\n          const transaction = new Transaction(csvRow);\n          console.log(transaction);\n          transactions.push(transaction);\n        }\n        this.transactions = transactions;\n      }\n    });\n  }\n\n  download() {\n    const ynabTransactions = this.transactions.map(transaction => transaction.toYnab());\n    ynabTransactions.unshift([\"Date\", \"Payee\", \"Category\", \"Memo\", \"Outflow\", \"Inflow\"]);\n    const csvText = Papa.unparse(ynabTransactions, {\n      delimiter: \",\",\n    });\n    const blob = new Blob([csvText], {type: \"text/csv;charset=utf-8\"});\n    saveAs(blob, 'ynab-import.csv');\n  }\n}\n\n// Típus;Könyvelés dátuma;Értéknap;Azonosító;Összeg;Közlemény/1;Közlemény/2;Közlemény/3;Közlemény/4;;\nclass Transaction {\n  private type: string;\n  private recordDate: Date;\n  private valueDate: Date;\n  private id: string;\n  private amount: number;\n  private note1: string;\n  private payee: string;\n  private note2: string;\n  private note3: string;\n\n  constructor(row) {\n    this.type = row[0];\n    this.recordDate = parseDate(row[1]);\n    this.valueDate = parseDate(row[2]);\n    this.id = row[3];\n    this.amount = parseAmount(row[4]);\n    this.note1 = row[5];\n    this.payee = row[6];\n    this.note2 = row[7];\n    this.note3 = row[8];\n  }\n\n  toYnab() {\n    // Date,Payee,Category,Memo,Outflow,Inflow\n    return [\n      this.valueDate.toLocaleString(\"en-US\").split(\",\")[0],\n      this.payee,\n      \"\",\n      this.mergeNotes(),\n      this.amount < 0 ? -this.amount : \"\",\n      this.amount >= 0 ? this.amount : \"\",\n    ];\n  }\n\n  private mergeNotes() {\n    if (!this.note2 && !this.note3) {\n      return this.note1;\n    } else if (!this.note3) {\n      return this.note2;\n    } else {\n      return this.note2 + \" / \" + this.note3;\n    }\n  }\n}\n\nfunction parseDate(date: string): Date {\n  const matcher = /(\\d{4})\\.(\\d{2})\\.(\\d{2})\\., \\w+/.exec(date);\n  return new Date(+matcher[1], +matcher[2] - 1, +matcher[3]);\n}\n\nfunction parseAmount(amount: string): number {\n  const matcher = /(-?[\\d\\s]+)(?:,(\\d+))? (\\w+)/.exec(amount);\n  let result = +(matcher[1].replace(/\\s+/g, \"\"));\n  if (matcher[2]) {\n    result += +matcher[2] / 100 * Math.sign(result + 0.5);\n  }\n  return result;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { FileHelpersModule } from 'ngx-file-helpers';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FileHelpersModule,\n\n    MatButtonModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTableModule,\n  ],\n  exports: [\n    MatButtonModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTableModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}